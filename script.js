"use strict";function _createForOfIteratorHelper(e,o){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=_unsupportedIterableToArray(e))||o&&e&&"number"==typeof e.length){r&&(e=r);var t=0,o=function(){};return{s:o,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,n=!0,i=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return n=e.done,e},e:function(e){i=!0,a=e},f:function(){try{n||null==r.return||r.return()}finally{if(i)throw a}}}}function _unsupportedIterableToArray(e,o){if(e){if("string"==typeof e)return _arrayLikeToArray(e,o);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,o):void 0}}function _arrayLikeToArray(e,o){(null==o||o>e.length)&&(o=e.length);for(var r=0,t=new Array(o);r<o;r++)t[r]=e[r];return t}function _classCallCheck(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}var form=document.querySelector(".form"),addBookButton=document.querySelector(".button"),submitButton=document.querySelector("#submitButton"),bookName=document.querySelector("#bookName"),author=document.querySelector("#author"),pagesNum=document.querySelector("#pagesNumber"),books=document.querySelector("#library"),library=[],Book=function e(o,r,t,a){_classCallCheck(this,e),this.bookName=o,this.author=r,this.pagesNum=t,this.isReaded=a};function checkFormValidation(){var e;0===bookName.value.length||0===author.value.length||0===pagesNum.value.length?alert("Please fill all the fields"):(document.querySelector('input[name = "readed"]:checked').value,e=document.querySelector('input[name = "readed"]:checked').value,e=new Book(bookName.value,author.value,pagesNum.value,e),library.push(e))}function clearForm(){bookName.value="",author.value="",pagesNum.value=""}function updateLocalStorage(){localStorage.setItem("library",JSON.stringify(library))}function checkLocalStorage(){library=localStorage.getItem("library")?JSON.parse(localStorage.getItem("library")):[]}function render(){checkLocalStorage(),console.log(library),books.innerHTML="",library.forEach(function(e){var o="true"===e.isReaded?"Read":"Uread",o='\n      <div class="book">\n        <button id="delete">‚ùå</button>\n        <div id="bookName">üìö '.concat(e.bookName,' üìö</div>\n        <div id="author">üßç ').concat(e.author,' üßç</div>\n        <div id="pagesNum">. ').concat(e.pagesNum,' pages .</div>\n        <div id="isReaded">').concat(o,"</div>\n      </div>\n    ");books.innerHTML+=o})}function deleteBook(e){library.splice(e,1)}function findBook(e){var o=_createForOfIteratorHelper(library);try{for(o.s();!(r=o.n()).done;){var r=r.value;if(r.bookName===e)return library.indexOf(r)}}catch(e){o.e(e)}finally{o.f()}}render(),form.addEventListener("submit",function(e){e.preventDefault(),checkFormValidation(),updateLocalStorage(),clearForm(),render(),location.reload()}),addBookButton.addEventListener("click",function(){form.classList.toggle("open"),addBookButton.classList.toggle("open")}),books.addEventListener("click",function(e){var o=e.target.parentNode;console.log(o.closest(".book")),"delete"==e.target.id&&(deleteBook(findBook(o.querySelector("#bookName").innerHTML)),updateLocalStorage(),render(),location.reload())});var timeline=gsap.timeline({default:{ease:"power1.out"}});timeline.to(".book",{y:"0%",duration:.5,stagger:.25,opacity:1});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyaXB0LmpzIiwic291cmNlcyI6WyJzY3JpcHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKG8sIGFsbG93QXJyYXlMaWtlKSB7IHZhciBpdDsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgb1tTeW1ib2wuaXRlcmF0b3JdID09IG51bGwpIHsgaWYgKEFycmF5LmlzQXJyYXkobykgfHwgKGl0ID0gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8pKSB8fCBhbGxvd0FycmF5TGlrZSAmJiBvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gXCJudW1iZXJcIikgeyBpZiAoaXQpIG8gPSBpdDsgdmFyIGkgPSAwOyB2YXIgRiA9IGZ1bmN0aW9uIEYoKSB7fTsgcmV0dXJuIHsgczogRiwgbjogZnVuY3Rpb24gbigpIHsgaWYgKGkgPj0gby5sZW5ndGgpIHJldHVybiB7IGRvbmU6IHRydWUgfTsgcmV0dXJuIHsgZG9uZTogZmFsc2UsIHZhbHVlOiBvW2krK10gfTsgfSwgZTogZnVuY3Rpb24gZShfZSkgeyB0aHJvdyBfZTsgfSwgZjogRiB9OyB9IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfSB2YXIgbm9ybWFsQ29tcGxldGlvbiA9IHRydWUsIGRpZEVyciA9IGZhbHNlLCBlcnI7IHJldHVybiB7IHM6IGZ1bmN0aW9uIHMoKSB7IGl0ID0gb1tTeW1ib2wuaXRlcmF0b3JdKCk7IH0sIG46IGZ1bmN0aW9uIG4oKSB7IHZhciBzdGVwID0gaXQubmV4dCgpOyBub3JtYWxDb21wbGV0aW9uID0gc3RlcC5kb25lOyByZXR1cm4gc3RlcDsgfSwgZTogZnVuY3Rpb24gZShfZTIpIHsgZGlkRXJyID0gdHJ1ZTsgZXJyID0gX2UyOyB9LCBmOiBmdW5jdGlvbiBmKCkgeyB0cnkgeyBpZiAoIW5vcm1hbENvbXBsZXRpb24gJiYgaXRbXCJyZXR1cm5cIl0gIT0gbnVsbCkgaXRbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKGRpZEVycikgdGhyb3cgZXJyOyB9IH0gfTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm0nKTtcbnZhciBhZGRCb29rQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbicpO1xudmFyIHN1Ym1pdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdWJtaXRCdXR0b24nKTtcbnZhciBib29rTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNib29rTmFtZScpO1xudmFyIGF1dGhvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhdXRob3InKTtcbnZhciBwYWdlc051bSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwYWdlc051bWJlcicpO1xudmFyIGJvb2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2xpYnJhcnknKTtcbnZhciBsaWJyYXJ5ID0gW107XG5cbnZhciBCb29rID0gZnVuY3Rpb24gQm9vayhib29rTmFtZSwgYXV0aG9yLCBwYWdlc051bSwgaXNSZWFkZWQpIHtcbiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJvb2spO1xuXG4gIHRoaXMuYm9va05hbWUgPSBib29rTmFtZTtcbiAgdGhpcy5hdXRob3IgPSBhdXRob3I7XG4gIHRoaXMucGFnZXNOdW0gPSBwYWdlc051bTtcbiAgdGhpcy5pc1JlYWRlZCA9IGlzUmVhZGVkO1xufTtcblxuZnVuY3Rpb24gY2hlY2tGb3JtVmFsaWRhdGlvbigpIHtcbiAgaWYgKGJvb2tOYW1lLnZhbHVlLmxlbmd0aCA9PT0gMCB8fCBhdXRob3IudmFsdWUubGVuZ3RoID09PSAwIHx8IHBhZ2VzTnVtLnZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgIGFsZXJ0KCdQbGVhc2UgZmlsbCBhbGwgdGhlIGZpZWxkcycpO1xuICAgIHJldHVybjtcbiAgfSBlbHNlIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lID0gXCJyZWFkZWRcIl06Y2hlY2tlZCcpLnZhbHVlID09PSAndHJ1ZScgPyB0cnVlIDogZmFsc2U7XG4gICAgdmFyIGlzUmVhZGVkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZSA9IFwicmVhZGVkXCJdOmNoZWNrZWQnKS52YWx1ZTtcbiAgICB2YXIgbmV3Qm9vayA9IG5ldyBCb29rKGJvb2tOYW1lLnZhbHVlLCBhdXRob3IudmFsdWUsIHBhZ2VzTnVtLnZhbHVlLCBpc1JlYWRlZCk7XG4gICAgbGlicmFyeS5wdXNoKG5ld0Jvb2spO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNsZWFyRm9ybSgpIHtcbiAgYm9va05hbWUudmFsdWUgPSAnJztcbiAgYXV0aG9yLnZhbHVlID0gJyc7XG4gIHBhZ2VzTnVtLnZhbHVlID0gJyc7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUxvY2FsU3RvcmFnZSgpIHtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2xpYnJhcnknLCBKU09OLnN0cmluZ2lmeShsaWJyYXJ5KSk7XG59XG5cbmZ1bmN0aW9uIGNoZWNrTG9jYWxTdG9yYWdlKCkge1xuICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2xpYnJhcnknKSkge1xuICAgIGxpYnJhcnkgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsaWJyYXJ5JykpO1xuICB9IGVsc2Uge1xuICAgIGxpYnJhcnkgPSBbXTtcbiAgfVxufVxuXG5mdW5jdGlvbiByZW5kZXIoKSB7XG4gIGNoZWNrTG9jYWxTdG9yYWdlKCk7XG4gIGNvbnNvbGUubG9nKGxpYnJhcnkpO1xuICBib29rcy5pbm5lckhUTUwgPSAnJztcbiAgbGlicmFyeS5mb3JFYWNoKGZ1bmN0aW9uIChib29rKSB7XG4gICAgdmFyIHJlYWRlZFN0YXR1c1RleHQgPSBib29rLmlzUmVhZGVkID09PSAndHJ1ZScgPyAnUmVhZCcgOiAnVXJlYWQnO1xuICAgIHZhciBib29rSFRNTCA9IFwiXFxuICAgICAgPGRpdiBjbGFzcz1cXFwiYm9va1xcXCI+XFxuICAgICAgICA8YnV0dG9uIGlkPVxcXCJkZWxldGVcXFwiPlxcdTI3NEM8L2J1dHRvbj5cXG4gICAgICAgIDxkaXYgaWQ9XFxcImJvb2tOYW1lXFxcIj5cXHVEODNEXFx1RENEQSBcIi5jb25jYXQoYm9vay5ib29rTmFtZSwgXCIgXFx1RDgzRFxcdURDREE8L2Rpdj5cXG4gICAgICAgIDxkaXYgaWQ9XFxcImF1dGhvclxcXCI+XFx1RDgzRVxcdUREQ0QgXCIpLmNvbmNhdChib29rLmF1dGhvciwgXCIgXFx1RDgzRVxcdUREQ0Q8L2Rpdj5cXG4gICAgICAgIDxkaXYgaWQ9XFxcInBhZ2VzTnVtXFxcIj4uIFwiKS5jb25jYXQoYm9vay5wYWdlc051bSwgXCIgcGFnZXMgLjwvZGl2PlxcbiAgICAgICAgPGRpdiBpZD1cXFwiaXNSZWFkZWRcXFwiPlwiKS5jb25jYXQocmVhZGVkU3RhdHVzVGV4dCwgXCI8L2Rpdj5cXG4gICAgICA8L2Rpdj5cXG4gICAgXCIpO1xuICAgIGJvb2tzLmlubmVySFRNTCArPSBib29rSFRNTDtcbiAgfSk7XG59XG5cbnJlbmRlcigpO1xuXG5mdW5jdGlvbiBkZWxldGVCb29rKGluZGV4KSB7XG4gIGxpYnJhcnkuc3BsaWNlKGluZGV4LCAxKTtcbn1cblxuZnVuY3Rpb24gZmluZEJvb2soYm9va05hbWUpIHtcbiAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGxpYnJhcnkpLFxuICAgICAgX3N0ZXA7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykge1xuICAgICAgdmFyIGJvb2sgPSBfc3RlcC52YWx1ZTtcblxuICAgICAgaWYgKGJvb2suYm9va05hbWUgPT09IGJvb2tOYW1lKSB7XG4gICAgICAgIHJldHVybiBsaWJyYXJ5LmluZGV4T2YoYm9vayk7XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfaXRlcmF0b3IuZShlcnIpO1xuICB9IGZpbmFsbHkge1xuICAgIF9pdGVyYXRvci5mKCk7XG4gIH1cbn1cblxuZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBmdW5jdGlvbiAoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIGNoZWNrRm9ybVZhbGlkYXRpb24oKTtcbiAgdXBkYXRlTG9jYWxTdG9yYWdlKCk7XG4gIGNsZWFyRm9ybSgpO1xuICByZW5kZXIoKTtcbiAgbG9jYXRpb24ucmVsb2FkKCk7XG59KTtcbmFkZEJvb2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gIGZvcm0uY2xhc3NMaXN0LnRvZ2dsZSgnb3BlbicpO1xuICBhZGRCb29rQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoJ29wZW4nKTtcbn0pO1xuYm9va3MuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICB2YXIgdGFyZ2V0ID0gZS50YXJnZXQucGFyZW50Tm9kZTtcbiAgY29uc29sZS5sb2codGFyZ2V0LmNsb3Nlc3QoJy5ib29rJykpO1xuXG4gIGlmIChlLnRhcmdldC5pZCA9PSAnZGVsZXRlJykge1xuICAgIHZhciBpbmRleCA9IGZpbmRCb29rKHRhcmdldC5xdWVyeVNlbGVjdG9yKCcjYm9va05hbWUnKS5pbm5lckhUTUwpO1xuICAgIGRlbGV0ZUJvb2soaW5kZXgpO1xuICAgIHVwZGF0ZUxvY2FsU3RvcmFnZSgpO1xuICAgIHJlbmRlcigpO1xuICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xuICB9XG59KTtcbnZhciB0aW1lbGluZSA9IGdzYXAudGltZWxpbmUoe1xuICBcImRlZmF1bHRcIjoge1xuICAgIGVhc2U6ICdwb3dlcjEub3V0J1xuICB9XG59KTtcbnRpbWVsaW5lLnRvKCcuYm9vaycsIHtcbiAgeTogJzAlJyxcbiAgZHVyYXRpb246IDAuNSxcbiAgc3RhZ2dlcjogMC4yNSxcbiAgb3BhY2l0eTogMVxufSk7Il0sIm5hbWVzIjpbIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIiwibyIsImFsbG93QXJyYXlMaWtlIiwiaXQiLCJTeW1ib2wiLCJpdGVyYXRvciIsIkFycmF5IiwiaXNBcnJheSIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsImxlbmd0aCIsImkiLCJGIiwicyIsIm4iLCJkb25lIiwidmFsdWUiLCJlIiwiX2UiLCJmIiwiVHlwZUVycm9yIiwiZXJyIiwibm9ybWFsQ29tcGxldGlvbiIsImRpZEVyciIsInN0ZXAiLCJuZXh0IiwiX2UyIiwibWluTGVuIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsImZyb20iLCJ0ZXN0IiwiYXJyIiwibGVuIiwiYXJyMiIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJmb3JtIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkQm9va0J1dHRvbiIsInN1Ym1pdEJ1dHRvbiIsImJvb2tOYW1lIiwiYXV0aG9yIiwicGFnZXNOdW0iLCJib29rcyIsImxpYnJhcnkiLCJCb29rIiwiaXNSZWFkZWQiLCJ0aGlzIiwiY2hlY2tGb3JtVmFsaWRhdGlvbiIsIm5ld0Jvb2siLCJhbGVydCIsInB1c2giLCJjbGVhckZvcm0iLCJ1cGRhdGVMb2NhbFN0b3JhZ2UiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiSlNPTiIsInN0cmluZ2lmeSIsImNoZWNrTG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInBhcnNlIiwicmVuZGVyIiwiY29uc29sZSIsImxvZyIsImlubmVySFRNTCIsImZvckVhY2giLCJib29rIiwicmVhZGVkU3RhdHVzVGV4dCIsImJvb2tIVE1MIiwiY29uY2F0IiwiZGVsZXRlQm9vayIsImluZGV4Iiwic3BsaWNlIiwiZmluZEJvb2siLCJfaXRlcmF0b3IiLCJfc3RlcCIsImluZGV4T2YiLCJhZGRFdmVudExpc3RlbmVyIiwicHJldmVudERlZmF1bHQiLCJsb2NhdGlvbiIsInJlbG9hZCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsInRhcmdldCIsInBhcmVudE5vZGUiLCJjbG9zZXN0IiwiaWQiLCJ0aW1lbGluZSIsImdzYXAiLCJkZWZhdWx0IiwiZWFzZSIsInRvIiwieSIsImR1cmF0aW9uIiwic3RhZ2dlciIsIm9wYWNpdHkiXSwibWFwcGluZ3MiOiJhQUVBLFNBQVNBLDJCQUEyQkMsRUFBR0MsR0FBa0IsSUFBSUMsRUFBSSxHQUFzQixvQkFBWEMsUUFBZ0QsTUFBdEJILEVBQUVHLE9BQU9DLFVBQW1CLENBQUUsR0FBSUMsTUFBTUMsUUFBUU4sS0FBT0UsRUFBS0ssNEJBQTRCUCxLQUFPQyxHQUFrQkQsR0FBeUIsaUJBQWJBLEVBQUVRLE9BQXFCLENBQU1OLElBQUlGLEVBQUlFLEdBQUksSUFBSU8sRUFBSSxFQUFPQyxFQUFJLGFBQWlCLE1BQU8sQ0FBRUMsRUFBR0QsRUFBR0UsRUFBRyxXQUFlLE9BQUlILEdBQUtULEVBQUVRLE9BQWUsQ0FBRUssTUFBTSxHQUFlLENBQUVBLE1BQU0sRUFBT0MsTUFBT2QsRUFBRVMsT0FBV00sRUFBRyxTQUFXQyxHQUFNLE1BQU1BLEdBQU9DLEVBQUdQLEdBQU8sTUFBTSxJQUFJUSxVQUFVLHlJQUE0SSxJQUE2Q0MsRUFBekNDLEdBQW1CLEVBQU1DLEdBQVMsRUFBWSxNQUFPLENBQUVWLEVBQUcsV0FBZVQsRUFBS0YsRUFBRUcsT0FBT0MsYUFBZ0JRLEVBQUcsV0FBZSxJQUFJVSxFQUFPcEIsRUFBR3FCLE9BQXNDLE9BQTlCSCxFQUFtQkUsRUFBS1QsS0FBYVMsR0FBU1AsRUFBRyxTQUFXUyxHQUFPSCxHQUFTLEVBQU1GLEVBQU1LLEdBQVFQLEVBQUcsV0FBZSxJQUFXRyxHQUFvQyxNQUFoQmxCLEVBQVcsUUFBV0EsRUFBVyxTQUFPLFFBQVUsR0FBSW1CLEVBQVEsTUFBTUYsS0FFeDlCLFNBQVNaLDRCQUE0QlAsRUFBR3lCLEdBQVUsR0FBS3pCLEVBQUwsQ0FBZ0IsR0FBaUIsaUJBQU5BLEVB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
